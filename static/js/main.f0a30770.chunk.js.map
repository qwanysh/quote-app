{"version":3,"sources":["consts.js","components/CategoryList/CategoryList.js","axiosApi.js","helpers.js","components/QuoteList/QuoteCard/QuoteCard.js","components/QuoteList/QuoteList.js","containers/Quotes/Quotes.js","components/Navbar/Navbar.js","containers/QuoteCreate/QuoteCreate.js","containers/QuoteEdit/QuoteEdit.js","components/Page404/Page404.js","containers/App.js","index.js"],"names":["categories","id","name","CategoryList","Pane","borderRight","position","top","Menu","Group","Item","is","Link","to","Divider","map","category","axios","create","baseURL","isValid","quote","author","text","trim","length","QuoteCard","onDelete","useState","spinner","setSpinner","display","flexDirection","justifyContent","border","marginBottom","className","Text","padding","borderTop","alignItems","Heading","size","marginRight","Button","intent","isLoading","onClick","quoteId","delete","then","toaster","success","QuoteList","quotes","bind","Quotes","props","setQuotes","setCategory","useEffect","categoryId","match","params","categoryObj","find","history","replace","url","get","response","data","Object","entries","getQuotes","paddingY","paddingRight","flexGrow","Spinner","marginX","filter","Navbar","borderBottom","appearance","paddingX","QuoteCreate","setQuote","changeHandler","event","quoteCopy","target","value","SelectField","label","onChange","TextInputField","placeholder","TextareaField","alignSelf","post","createQuote","push","disabled","QuoteEdit","getQuoteDetails","put","updateQuote","Page404","ErrorIcon","color","App","basename","maxWidth","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f0a30770.chunk.js","sourcesContent":["export const categories = [\n  { id: 'humour', name: 'Humour' },\n  { id: 'love', name: 'Love' },\n  { id: 'motivation', name: 'Motivation' },\n  { id: 'life', name: 'Life' },\n];\n","import React from 'react';\nimport { Menu, Pane } from 'evergreen-ui';\nimport { Link } from 'react-router-dom';\nimport { categories } from '../../consts';\n\nconst CategoryList = () => {\n  return (\n    <Pane borderRight>\n      <Pane position=\"sticky\" top={0}>\n        <Menu>\n          <Menu.Group>\n            <Menu.Item is={Link} to=\"/\">\n              All\n            </Menu.Item>\n          </Menu.Group>\n          <Menu.Divider />\n          <Menu.Group>\n            {categories.map((category) => (\n              <Menu.Item\n                key={category.id}\n                is={Link}\n                to={`/quotes/${category.id}`}\n              >\n                {category.name}\n              </Menu.Item>\n            ))}\n          </Menu.Group>\n        </Menu>\n      </Pane>\n    </Pane>\n  );\n};\n\nexport default CategoryList;\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://qwanysh-api.firebaseio.com',\n});\n","import axios from './axiosApi';\n\nexport const createQuote = (quote) => {\n  return axios.post('/quotes.json', quote);\n};\n\nexport const getQuotes = (category) => {\n  const url = category\n    ? `/quotes.json?orderBy=\"category\"&equalTo=\"${category.id}\"`\n    : '/quotes.json';\n  return axios.get(url).then((response) => {\n    const quotes = response.data;\n    return quotes\n      ? Object.entries(quotes).map(([id, quote]) => ({ ...quote, id }))\n      : [];\n  });\n};\n\nexport const deleteQuote = (quoteId) => {\n  return axios.delete(`/quotes/${quoteId}.json`);\n};\n\nexport const getQuoteDetails = (quoteId) => {\n  return axios\n    .get(`/quotes/${quoteId}.json`)\n    .then((response) => ({ ...response.data, id: quoteId }));\n};\n\nexport const updateQuote = (quote) => {\n  return axios.put(`/quotes/${quote.id}.json`, quote);\n};\n\nexport const isValid = (quote) => {\n  const { author, text } = quote;\n  return author.trim().length && text.trim().length;\n};\n","import React, { useState } from 'react';\nimport { Button, Heading, Pane, Text, toaster } from 'evergreen-ui';\nimport { deleteQuote } from '../../../helpers';\nimport { Link } from 'react-router-dom';\n\nconst QuoteCard = ({ quote, onDelete }) => {\n  const [spinner, setSpinner] = useState(false);\n  const deleteHandler = () => {\n    setSpinner(true);\n    deleteQuote(quote.id).then(() => {\n      setSpinner(false);\n      onDelete();\n      toaster.success('Quote deleted');\n    });\n  };\n\n  return (\n    <Pane\n      display=\"flex\"\n      flexDirection=\"column\"\n      justifyContent=\"space-between\"\n      border\n      marginBottom={10}\n      className=\"fadeIn\"\n    >\n      <Text padding={10}>{quote.text}</Text>\n      <Pane\n        borderTop\n        padding={10}\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n        alignItems=\"center\"\n      >\n        <Heading size={100} marginRight=\"auto\">\n          {quote.author}\n        </Heading>\n        <Button\n          marginRight={5}\n          intent=\"warning\"\n          is={Link}\n          to={`/quotes/${quote.id}/edit`}\n        >\n          Edit\n        </Button>\n        <Button intent=\"danger\" isLoading={spinner} onClick={deleteHandler}>\n          Delete\n        </Button>\n      </Pane>\n    </Pane>\n  );\n};\n\nexport default QuoteCard;\n","import React from 'react';\nimport QuoteCard from './QuoteCard/QuoteCard';\nimport { Text } from 'evergreen-ui';\n\nconst QuoteList = ({ quotes, onDelete }) => {\n  return quotes.length ? (\n    quotes.map((quote) => (\n      <QuoteCard\n        key={quote.id}\n        quote={quote}\n        onDelete={onDelete.bind(this, quote.id)}\n      />\n    ))\n  ) : (\n    <Text className=\"fadeIn\">No quotes here :(</Text>\n  );\n};\n\nexport default QuoteList;\n","import React, { useEffect, useState } from 'react';\nimport { Heading, Pane, Spinner } from 'evergreen-ui';\nimport CategoryList from '../../components/CategoryList/CategoryList';\nimport { getQuotes } from '../../helpers';\nimport { categories } from '../../consts';\nimport QuoteList from '../../components/QuoteList/QuoteList';\n\nconst Quotes = (props) => {\n  const [spinner, setSpinner] = useState(false);\n  const [quotes, setQuotes] = useState([]);\n  const [category, setCategory] = useState(null);\n\n  const deleleQuoteHandler = (quoteId) => {\n    setQuotes(quotes.filter(({ id }) => id !== quoteId));\n  };\n\n  useEffect(() => {\n    const { categoryId } = props.match.params;\n    const categoryObj = categories.find(({ id }) => id === categoryId);\n\n    if (categoryId && !categoryObj) {\n      props.history.replace('/404');\n    }\n\n    setCategory(categoryId ? categoryObj : null);\n  }, [props.match.params]);\n\n  useEffect(() => {\n    const { categoryId } = props.match.params;\n    if (categoryId && !category) return;\n\n    setSpinner(true);\n    getQuotes(category).then((quotes) => {\n      setSpinner(false);\n      setQuotes(quotes);\n    });\n  }, [category]);\n\n  return (\n    <Pane paddingY={40} display=\"flex\" className=\"fadeIn\">\n      <CategoryList />\n      <Pane padding={10} paddingRight={0} flexGrow={1}>\n        <Heading marginBottom={10}>{category ? category.name : 'All'}</Heading>\n        {spinner ? (\n          <Spinner size={40} marginX=\"auto\" />\n        ) : (\n          <QuoteList quotes={quotes} onDelete={deleleQuoteHandler} />\n        )}\n      </Pane>\n    </Pane>\n  );\n};\n\nexport default Quotes;\n","import React from 'react';\nimport { Heading, Pane, Button } from 'evergreen-ui';\nimport { Link } from 'react-router-dom';\n\nconst Navbar = () => {\n  return (\n    <Pane\n      paddingY={20}\n      display=\"flex\"\n      justifyContent=\"space-between\"\n      alignItems=\"center\"\n      borderBottom\n    >\n      <Heading>Quotes App</Heading>\n      <Pane display=\"flex\" alignItems=\"center\">\n        <Button is={Link} to=\"/\" appearance=\"minimal\" paddingX={10}>\n          Quotes\n        </Button>\n        <Button is={Link} to=\"/add-quote\" appearance=\"minimal\" paddingX={10}>\n          Submit new Quote\n        </Button>\n      </Pane>\n    </Pane>\n  );\n};\n\nexport default Navbar;\n","import React, { useState } from 'react';\nimport {\n  Button,\n  Heading,\n  Pane,\n  SelectField,\n  TextareaField,\n  TextInputField,\n  toaster,\n} from 'evergreen-ui';\nimport { categories } from '../../consts';\nimport { createQuote, isValid } from '../../helpers';\n\nconst QuoteCreate = ({ history }) => {\n  const [spinner, setSpinner] = useState(false);\n  const [quote, setQuote] = useState({\n    category: categories[0].id,\n    author: '',\n    text: '',\n  });\n\n  const changeHandler = (event) => {\n    const quoteCopy = { ...quote };\n    quoteCopy[event.target.name] = event.target.value;\n    setQuote(quoteCopy);\n  };\n\n  const submitHandler = () => {\n    if (isValid(quote)) {\n      setSpinner(true);\n      createQuote(quote).then(() => {\n        setSpinner(false);\n        toaster.success('Quote added');\n        history.push('/');\n      });\n    }\n  };\n\n  return (\n    <Pane\n      paddingY={40}\n      display=\"flex\"\n      flexDirection=\"column\"\n      className=\"fadeIn\"\n    >\n      <Heading marginBottom={10}>Create Quote</Heading>\n      <SelectField\n        label=\"Category\"\n        value={quote.category}\n        name=\"category\"\n        onChange={changeHandler}\n      >\n        {categories.map((category) => (\n          <option key={category.id} value={category.id}>\n            {category.name}\n          </option>\n        ))}\n      </SelectField>\n      <TextInputField\n        label=\"Author\"\n        placeholder=\"Enter author name\"\n        value={quote.author}\n        name=\"author\"\n        onChange={changeHandler}\n      />\n      <TextareaField\n        label=\"Quote text\"\n        placeholder=\"Enter quote text\"\n        value={quote.text}\n        name=\"text\"\n        onChange={changeHandler}\n      />\n      <Button\n        alignSelf=\"flex-end\"\n        onClick={submitHandler}\n        isLoading={spinner}\n        disabled={!isValid(quote)}\n        intent=\"success\"\n      >\n        Save\n      </Button>\n    </Pane>\n  );\n};\n\nexport default QuoteCreate;\n","import React, { useEffect, useState } from 'react';\nimport {\n  Button,\n  Heading,\n  Pane,\n  SelectField,\n  TextareaField,\n  TextInputField,\n  toaster,\n} from 'evergreen-ui';\nimport { categories } from '../../consts';\nimport { getQuoteDetails, isValid, updateQuote } from '../../helpers';\nimport { Link } from 'react-router-dom';\n\nconst QuoteEdit = (props) => {\n  const [spinner, setSpinner] = useState(false);\n  const [quote, setQuote] = useState({\n    category: '',\n    author: '',\n    text: '',\n  });\n\n  const changeHandler = (event) => {\n    const quoteCopy = { ...quote };\n    quoteCopy[event.target.name] = event.target.value;\n    setQuote(quoteCopy);\n  };\n\n  const submitHandler = () => {\n    if (isValid(quote)) {\n      setSpinner(true);\n      updateQuote(quote).then(() => {\n        setSpinner(false);\n        toaster.success('Quote saved');\n      });\n    }\n  };\n\n  useEffect(() => {\n    const { quoteId } = props.match.params;\n    getQuoteDetails(quoteId).then((quote) => {\n      setQuote(quote);\n    });\n  }, [props.match.params]);\n\n  return (\n    <Pane\n      paddingY={40}\n      display=\"flex\"\n      flexDirection=\"column\"\n      className=\"fadeIn\"\n    >\n      <Heading marginBottom={10}>Edit Quote</Heading>\n      <SelectField\n        label=\"Category\"\n        value={quote.category}\n        name=\"category\"\n        onChange={changeHandler}\n      >\n        {categories.map((category) => (\n          <option key={category.id} value={category.id}>\n            {category.name}\n          </option>\n        ))}\n      </SelectField>\n      <TextInputField\n        label=\"Author\"\n        placeholder=\"Enter author name\"\n        value={quote.author}\n        name=\"author\"\n        onChange={changeHandler}\n      />\n      <TextareaField\n        label=\"Quote text\"\n        placeholder=\"Enter quote text\"\n        value={quote.text}\n        name=\"text\"\n        onChange={changeHandler}\n      />\n      <Pane display=\"flex\" justifyContent=\"flex-end\" alignItems=\"center\">\n        <Button is={Link} to=\"/\" marginRight={10}>\n          Back to quotes\n        </Button>\n        <Button\n          onClick={submitHandler}\n          isLoading={spinner}\n          disabled={!isValid(quote)}\n          intent=\"success\"\n        >\n          Save\n        </Button>\n      </Pane>\n    </Pane>\n  );\n};\n\nexport default QuoteEdit;\n","import React from 'react';\nimport { ErrorIcon, Heading, Pane } from 'evergreen-ui';\n\nconst Page404 = () => {\n  return (\n    <Pane\n      paddingY={40}\n      className=\"fadeIn\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n    >\n      <ErrorIcon color=\"muted\" size={40} marginBottom={20} />\n      <Heading>404 Not found</Heading>\n    </Pane>\n  );\n};\n\nexport default Page404;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Redirect, Route, Switch } from 'react-router';\nimport Quotes from './Quotes/Quotes';\nimport Navbar from '../components/Navbar/Navbar';\nimport { Pane } from 'evergreen-ui';\nimport QuoteCreate from './QuoteCreate/QuoteCreate';\nimport QuoteEdit from './QuoteEdit/QuoteEdit';\nimport Page404 from '../components/Page404/Page404';\n\nconst App = () => {\n  return (\n    <BrowserRouter basename=\"/quote-app/\">\n      <Pane maxWidth={640} paddingX={20} marginX=\"auto\">\n        <Navbar />\n        <Switch>\n          <Route path=\"/\" exact component={Quotes} />\n          <Route path=\"/quotes/:categoryId\" exact component={Quotes} />\n          <Route path=\"/add-quote\" exact component={QuoteCreate} />\n          <Route path=\"/quotes/:quoteId/edit\" exact component={QuoteEdit} />\n          <Route path=\"/404\" exact component={Page404} />\n          <Route path=\"/\">\n            <Redirect to=\"/404\" />\n          </Route>\n        </Switch>\n      </Pane>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}